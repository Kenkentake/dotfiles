# GCP sdk
source $HOME/google-cloud-sdk/completion.zsh.inc

# z setting
. `brew --prefix`/etc/profile.d/z.sh

# fzf setting
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_DEFAULT_OPTS='--color=fg+:11 --height 70% --reverse --select-1 --exit-0 --multi'


fh() {
  eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# fzf-cdr
alias cdd='fzf-cdr'
function fzf-cdr() {
    target_dir=`cdr -l | sed 's/^[^ ][^ ]*  *//' | fzf`
    target_dir=`echo ${target_dir/\~/$HOME}`
    if [ -n "$target_dir" ]; then
        cd $target_dir
    fi
}

# fkill - kill process
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

alias zf='z | fzf'

# Git alias
alias g='git'
alias gb='git branch'
alias gch='git checkout'
alias gcm='git commit -m'
alias gco='git checkout'
alias gd='git diff'
alias gl='git log'
alias gs='git status'

# git checkout branchをfzfで選択
alias fgc='git checkout $(git branch -a | tr -d " " |fzf --height 100% --prompt "CHECKOUT BRANCH>" --preview "git log --color=always {}" | head -n 1 | sed -e "s/^\*\s*//g" | perl -pe "s/remotes\/origin\///g")'

# 不要なローカルレポジトリを一括削除する
function gclean() {
    git branch | awk '{ if ($1 != "*") print $1; }' |  grep -vE "master|main|develop" | xargs git branch -D
}

# Docker alias
alias d='docker'
alias dc='docker compose'
alias di='docker images'
alias dp='docker ps'

# eza alias
alias ei="eza"
alias ea="eza -a"
alias ee="eza -aahl"
alias et="eza -T -L 3 -a -I 'node_modules|.git|.cache'"
alias eta="eza -T -a -I 'node_modules|.git|.cache' --color=always | less -r"
alias ls=ei
alias la=ea
alias ll=ee
alias lt=et
alias lta=eta
alias l="clear && ls"

# ripgrep alias
alias rg="rg --hidden"

# bat alias
alias cat="bat"

# nvidia-smi alias
alias nv="nvidia-smi"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/ken_takemoto/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ken_takemoto/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/ken_takemoto/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/ken_takemoto/Downloads/google-cloud-sdk/completion.zsh.inc'; fi


# The next line enables shell command completion for gcloud.
if [ -f '/Users/satsuki/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/satsuki/google-cloud-sdk/completion.zsh.inc'; fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light zdharma/history-search-multi-word
zinit light mollifier/anyframe

# pressing tab twice quickly in succession autocompletes the suggestion
bindkey '\t\t' autosuggest-accept

# starship setting
eval "$(starship init zsh)"

# btop alias
alias top="btop"

# vim setting file alias
alias vg='vim ~/.gitconfig'
alias vs='vim ~/.ssh/config'
alias vv='vim ~/.vimrc'
alias vz='vim ~/.zshrc; source ~/.zshrc'